generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id             Int       @id @default(autoincrement())
  nome           String
  email          String    @unique
  telefone       String
  endereco       String
  tipoDocumento  String    @map("tipo_documento")
  documento      String    @unique
  quickbooksId   String?   @map("quickbooks_id")
  syncedAt       DateTime? @map("synced_at")
  syncStatus     String?   @default("pending") @map("sync_status")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  pedidos        Pedido[]

  @@map("clientes")
}

model Categoria {
  id        Int       @id @default(autoincrement())
  nome      String    @unique
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  produtos  Produto[]

  @@map("categorias")
}

model Produto {
  id             Int          @id @default(autoincrement())
  nome           String
  descricao      String?
  preco          Float
  estoqueAtual   Int          @default(0) @map("estoque_atual")
  estoqueMinimo  Int          @default(0) @map("estoque_minimo")
  categoriaId    Int          @map("categoria_id")
  quickbooksId   String?      @map("quickbooks_id")
  syncedAt       DateTime?    @map("synced_at")
  syncStatus     String?      @default("pending") @map("sync_status")
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")
  categoria      Categoria    @relation(fields: [categoriaId], references: [id])
  itensPedido    ItemPedido[]

  @@map("produtos")
}

model Pedido {
  id             Int          @id @default(autoincrement())
  clienteId      Int          @map("cliente_id")
  status         String       @default("agendado")
  data           DateTime
  horario        String
  endereco       String
  observacao     String?
  quickbooksId   String?      @map("quickbooks_id")
  syncedAt       DateTime?    @map("synced_at")
  syncStatus     String?      @default("pending") @map("sync_status")
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")
  cliente        Cliente      @relation(fields: [clienteId], references: [id])
  itens          ItemPedido[]

  @@map("pedidos")
}

model ItemPedido {
  id            Int      @id @default(autoincrement())
  pedidoId      Int      @map("pedido_id")
  produtoId     Int      @map("produto_id")
  quantidade    Int
  precoUnitario Float    @map("preco_unitario")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  pedido        Pedido   @relation(fields: [pedidoId], references: [id], onDelete: Cascade)
  produto       Produto  @relation(fields: [produtoId], references: [id])

  @@map("itens_pedido")
}

model Funcionario {
  id        Int      @id @default(autoincrement())
  nome      String
  email     String   @unique
  telefone  String
  cargo     String
  salario   Float
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("funcionarios")
}

model QuickBooksConfig {
  id                      Int      @id @default(autoincrement())
  realmId                 String   @unique @map("realm_id")
  accessToken             String   @map("access_token")
  refreshToken            String   @map("refresh_token")
  expiresAt               DateTime @map("expires_at")
  refreshTokenExpiresAt   DateTime @map("refresh_token_expires_at")
  createdAt               DateTime @default(now()) @map("created_at")
  updatedAt               DateTime @updatedAt @map("updated_at")

  @@map("quickbooks_config")
}

model SyncLog {
  id            Int      @id @default(autoincrement())
  entityType    String   @map("entity_type")
  entityId      Int      @map("entity_id")
  action        String
  status        String
  quickbooksId  String?  @map("quickbooks_id")
  errorMessage  String?  @map("error_message")
  createdAt     DateTime @default(now()) @map("created_at")

  @@map("sync_logs")
}
